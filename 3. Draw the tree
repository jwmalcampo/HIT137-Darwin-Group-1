import turtle
 
def tree(size, depth, angle_left, angle_right, shrink_factor):
    if depth > 0:
        color = get_color(depth, max_depth)
        t.pencolor(color)
        thickness = int(depth* 1)
        if thickness < 2:                                           #adjust the thickness of the tree, go slimmer
                thickness = 2
        t.width (thickness)
 
 
        t.forward(size)
        t.right(angle_right)
        tree(size * shrink_factor, depth - 1, angle_left, angle_right, shrink_factor)
        t.left(angle_left + angle_right)
        tree(size * shrink_factor, depth - 1, angle_left, angle_right, shrink_factor)
        t.right(angle_left)
        t.backward(size)
 
def get_color(depth, max_depth):                                    #identify color's brach based on depth and max depth
 
    if depth > max_depth - 1:                                       # Return the color in the lower branch with the requirements
        return 'brown'
    else:
        return 'green'
 
if __name__ == '__main__':
    t = turtle.Turtle()
    t.speed(0)                                                      # Set fastest speed, else we can adujst the speed slowly to 0, 1, 2...
    t.penup()
    t.goto(0, -200)                                                 # Move turle to the lower screen
    t.pendown()
    t.left(90)                                                      # point turtle upward
 
    angle_left = int(input("Input left branch angle (degrees): "))
    angle_right = int(input("Input right branch angle (degrees): ")) # Enter 25
    initial_branch_size = int(input("Input starting branch length (pixels): ")) # Enter 100 if you want to have result in the example
    recursion_depth = int(input("Input recursion depth: "))
    shrink_factor = float(input("Input reduction factor (0-1): "))  #Enter 0.7 (70%) if you want to have the result exactly in the question
 
    max_depth = recursion_depth
    tree(initial_branch_size, recursion_depth, angle_left, angle_right, shrink_factor)
    t.hideturtle()                                                  # Hide turtle and display
    turtle.done()
